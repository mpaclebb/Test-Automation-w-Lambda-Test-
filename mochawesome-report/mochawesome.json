{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-16T17:03:36.384Z",
    "end": "2025-07-16T17:03:43.274Z",
    "duration": 6890,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e6b7013d-6458-4229-91a8-0e873ae8227f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d5a7edc7-6654-44c6-9130-9ea51932a98b",
          "title": "add another todo tests",
          "fullFile": "/Users/markupacleb/Desktop/seleniumDemo/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add another todo tests successfully adds another todo to application",
              "timedOut": null,
              "duration": 5766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todotext = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodotext.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "2630681f-8a68-42ae-b410-d1b925ad8122",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2630681f-8a68-42ae-b410-d1b925ad8122"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5766,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "ab95edd2-215d-4716-89f3-83d7d3e1dc5c",
          "title": "add todo tests",
          "fullFile": "/Users/markupacleb/Desktop/seleniumDemo/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 6197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\n   let driver = await new Builder().forBrowser(\"chrome\").build();\n   //navigate to our application\n   await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n   //add a todo\n   await driver\n     .findElement(By.id(\"sampletodotext\"))\n     .sendKeys(\"Learn Selenium\", Key.RETURN);\n   //assert\n   let todotext = await driver\n     .findElement(By.xpath(\"//li[last()]\"))\n     .getText()\n     .then(function (value) {\n       return value;\n     });\n   //assert using chai should\n   todotext.should.equal(\"Learn Selenium\");\n   //close the browser\n   await driver.quit();",
              "err": {},
              "uuid": "f7de0e85-df7d-44ac-9ab2-a360714ef6ec",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7de0e85-df7d-44ac-9ab2-a360714ef6ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6197,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}